{"name":"webaudio-scope","tagline":"Simple self-contained demo of HTML5 Web Audio APIs used with the WebRTC  getUserMedia API used to capture live audio input.","body":"# [Live Demo](https://github.com/fadams/webaudio-scope/blob/master/scope.html)\r\n\r\n# webaudio-scope\r\nSimple self-contained demo of HTML5 Web Audio APIs used with the WebRTC getUserMedia API\r\nused to capture live audio input from the microphone.\r\n\r\nIt doesn't do anything terribly exciting, it just loops the input stream to the\r\noutput and renders a simple oscilloscope visualisation.\r\n\r\nThe main aim is just to play with the API and include references to the APIs used\r\nso I can find them quickly again :-)\r\n\r\n**WebRTC:**\r\n\r\nhttps://developer.mozilla.org/en-US/docs/NavigatorUserMedia.getUserMedia\r\n````\r\nnavigator.getUserMedia(constraints, successCallback, errorCallback);\r\n````\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API#LocalMediaStream\r\n\r\n**WebAudio:**\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API  \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API  \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/AudioContext  \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/AudioNode  \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode  \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode  \r\n\r\n**\"Interesting\" Browser Issues**  \r\nA couple of browser quirks caused a bit of pain as I was experimenting with getUserMedia and WebAudio.\r\n\r\n**Firefox (Using FF 34):**  \r\n**_Distorted Audio (a sort of \"wobbly\" sound)_**  \r\nBy default Firefox getUserMedia seemed to be horribly distorted, but worked\r\nfine on Chrome and Opera. I *eventually* tracked it down to Firefox doing some\r\npost-processing of the input by default.\r\n\r\n````\r\nabout:config\r\n````\r\n\r\nsearch for \"getusermedia\"\r\n\r\n````\r\nmedia.getusermedia.agc_enabled\r\nmedia.getusermedia.aec_enabled\r\n````\r\n\r\n(Automatic Gain Control & Acoustic Echo Cancellation) should both be set to false.\r\n\r\nIt would be nice if these were controllable via getUserMedia constraints, but for\r\nFirefox at least a global **about:config** setting is currently required.\r\n\r\n**_\"Disappearing\" Microphone input_**  \r\nA MediaStreamAudioSourceNode will get prematurely garbage-collected due to a bug in Firefox\r\n https://bugzilla.mozilla.org/show_bug.cgi?id=934512, which causes the microphone\r\nto spontaneously switch off after five or so seconds. This normally occurs because\r\nthe MediaStreamAudioSourceNode tends to get created in the getUserMedia success\r\ncallback in a line like this:\r\n\r\n````\r\nvar input = context.createMediaStreamSource(stream);\r\n````\r\n\r\nThe issue (for Firefox) is the local reference in the scope of the gUM success\r\ncallback. If, however, we use a more global reference to the input variable it\r\nwon't get prematurely garbage-collected:\r\n\r\n````\r\nvar input;\r\n\r\n...\r\n...\r\n\r\n// In the getUserMedia success callback\r\n// Note the use of the \"global\" reference.\r\ninput = context.createMediaStreamSource(stream);\r\n````\r\n\r\n**Chrome (39.0.2171.99 (64-bit)) & Opera (Using opera 26.0):**  \r\n**_ScriptProcessorNodes \"randomly\" stop processing_**  \r\nChrome and Opera have their own premature garbage-collection issue. In their\r\ncase it relates to ScriptProcessorNodes (not actually used in webaudio-scope).\r\n\r\nAn AudioNode *should* live as long as there are any references to it *including*\r\na connection reference which occurs if another AudioNode is connected to it. As\r\nper the specification:\r\n\r\nhttp://www.w3.org/TR/webaudio/#lifetime-AudioNode (clause 3.)\r\n\r\nbut with Chrome and Opera the ScriptProcessorNode gets garbage collected when the\r\nnormal object reference goes out of scope. This is a bug covered in these references:\r\n\r\nhttps://bugs.webkit.org/show_bug.cgi?id=112521  \r\nhttps://code.google.com/p/chromium/issues/detail?id=82795  \r\nhttp://sriku.org/blog/2013/01/30/taming-the-scriptprocessornode\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}